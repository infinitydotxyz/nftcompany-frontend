@import 'styles/_mixins.scss';

@include cardList();

$cardHeight: 420px;

.button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  height: 48px;
  padding: 0 24px;
  background: #4047ff;
  border-radius: 24px;
  font-family: 'DM Sans', sans-serif;
  font-size: 16px;
  font-weight: 700;
  line-height: 1;
  text-align: center;
  color: #fcfcfd;
  transition: all 0.2s;
}
.ownedTag {
  position: absolute;
  top: 20px;
  left: 20px;

  background-color: var(--chakra-colors-brandBlueAlpha, red);
  color: white;
  padding: 4px 10px;
  font-size: 0.8rem;
  border-radius: 4px;
  text-transform: uppercase;
  font-weight: bold;
  z-index: 1;
}

.featured {
  position: absolute;
  top: 20px;
  left: 20px;

  background-color: rgba(240, 240, 240, 0.6);
  color: white;
  padding: 4px 10px;
  font-size: 0.8rem;
  border-radius: 4px;
  text-transform: uppercase;
  font-weight: bold;
  z-index: 1;
}

.cardList {
  display: grid;

  // the minmax(0, 1fr) rather than 1fr keeps the cards from growing past their initial width
  // https://stackoverflow.com/questions/43311943/prevent-content-from-expanding-grid-items?rq=1
  grid-template-columns: repeat(4, minmax(0, 1fr));
  grid-gap: 56px;

  margin: 10px 0 40px 0;
}

.card {
  position: relative;
  padding: 12px;
  border-radius: 20px;
  height: $cardHeight;
  @include lightShadow();
  background-color: var(--chakra-colors-cardBgLight, red);

  :global(body.chakra-ui-dark) & {
    @include darkShadow();
    background-color: var(--chakra-colors-cardBgDark, red);
  }

  .cardPreview {
    position: relative;
    border-radius: 16px;
    overflow: hidden;
    height: 280px;
    cursor: pointer;

    img {
      min-width: 100%;
      min-height: 280px;
      transition: transform 1s;
      object-fit: cover;
    }
    &:hover img {
      transform: scale(1.1);
    }
  }
  &:hover {
    .buttons {
      display: flex;
    }
  }

  .buttons {
    display: none;
    gap: 10px;
    // padding: 10px 20px 20px 20px;
    padding: 0;
    width: 100%;
    flex: 0;
    color: blue;

    .stadiumButtonGray,
    .stadiumButtonBlue {
      background-color: var(--chakra-colors-brandBlue, red);
      color: white;
      border-radius: 100px;
      flex: 1;
      &:hover {
        background-color: blue;
        color: white;
      }
    }

    .stadiumButtonGray {
      background-color: #bbb;
      color: black;
    }
  }

  .cardControls {
    //  width: 100%;
    // height: 100%;
    display: flex;

    .cardButton {
      // position: absolute;
      // left: 50%;
      // bottom: 16px;
      min-width: 140px;
      margin-bottom: 10px;
      margin: 0 10px 10px 10px;
      // transform: translateX(-50%);
    }
  }

  .cardBody {
    // padding: 10px 0;
  }
  .cardLine {
    display: flex;
    justify-content: space-between;
    margin-top: 10px;
    font-size: 14px;
    align-items: flex-start;

    .collectionRow {
      display: flex;
      align-items: flex-end;
    }

    .collectionName {
      color: var(--text-secondary);
      font-size: 0.9em;

      // keeps long titles from flowing outside the card bounds
      white-space: nowrap;
      max-width: 20ch;
      text-overflow: ellipsis;
      overflow: hidden;
    }

    .cardTitle {
      font-size: 16px;
      font-weight: 500;
      display: flex;
      gap: 7px;
      flex-direction: column;

      .title {
        // keeps long titles from flowing outside the card bounds
        white-space: nowrap;
        max-width: 20ch;
        text-overflow: ellipsis;
        overflow: hidden;
      }
    }
  }
}

.featuredCard {
  background-image: linear-gradient(140deg, #ffffff 0%, #ffffff 50%, #d2fffb 75%);
}

@media only screen and (min-width: 1000px) and (max-width: 1400px) {
  .cardList {
    grid-gap: 36px;
    grid-template-columns: repeat(3, minmax(0, 1fr));

    .card {
      .cardPreview {
        max-height: inherit;
      }
    }
  }
}

@media only screen and (min-width: 700px) and (max-width: 1000px) {
  .cardList {
    grid-gap: 36px;
    grid-template-columns: repeat(2, minmax(0, 1fr));

    .card {
      .cardPreview {
        max-height: inherit;
      }
    }
  }
}

@media only screen and (max-width: 700px) {
  .cardList {
    grid-gap: 36px;
    grid-template-columns: repeat(1, minmax(0, 1fr));

    .card {
      .cardPreview {
        max-height: inherit;
      }
    }
  }
}
